{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":6165969,"sourceType":"datasetVersion","datasetId":3537629}],"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/rputtam/pyspark-explore?scriptVersionId=163240785\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"## This notebook aims to utilize pyspark and explore various functions for data analysis and manipulation.","metadata":{}},{"cell_type":"markdown","source":"Resources for pySpark \n1. https://sparkbyexamples.com/pyspark-tutorial/\n2. https://github.com/spark-examples/pyspark-examples\n3. https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/functions.html?hl=en-GB","metadata":{}},{"cell_type":"markdown","source":"##### There are two types of pyspark rdd operations - transformations and actions\n* Transformations return rdds\n* Actions return the result (non-rdds)","metadata":{}},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-02-14T23:08:43.740675Z","iopub.execute_input":"2024-02-14T23:08:43.741398Z","iopub.status.idle":"2024-02-14T23:08:43.750642Z","shell.execute_reply.started":"2024-02-14T23:08:43.741356Z","shell.execute_reply":"2024-02-14T23:08:43.749344Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"/kaggle/input/employees-performance-for-hr-analytics/Uncleaned_employees_final_dataset (1).csv\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Install PySpark","metadata":{}},{"cell_type":"code","source":"# Installing Pyspark\n!pip install pyspark","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:08:46.801367Z","iopub.execute_input":"2024-02-14T23:08:46.801768Z","iopub.status.idle":"2024-02-14T23:09:46.77053Z","shell.execute_reply.started":"2024-02-14T23:08:46.801739Z","shell.execute_reply":"2024-02-14T23:09:46.769205Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"Collecting pyspark\n  Downloading pyspark-3.5.0.tar.gz (316.9 MB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m316.9/316.9 MB\u001b[0m \u001b[31m3.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25ldone\n\u001b[?25hRequirement already satisfied: py4j==0.10.9.7 in /opt/conda/lib/python3.10/site-packages (from pyspark) (0.10.9.7)\nBuilding wheels for collected packages: pyspark\n  Building wheel for pyspark (setup.py) ... \u001b[?25ldone\n\u001b[?25h  Created wheel for pyspark: filename=pyspark-3.5.0-py2.py3-none-any.whl size=317425345 sha256=043b9515dd929c24938802e91b8892f4e1492a00822d912e7774c990fbcf9670\n  Stored in directory: /root/.cache/pip/wheels/41/4e/10/c2cf2467f71c678cfc8a6b9ac9241e5e44a01940da8fbb17fc\nSuccessfully built pyspark\nInstalling collected packages: pyspark\nSuccessfully installed pyspark-3.5.0\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Create SparkSession","metadata":{}},{"cell_type":"code","source":"# Importing and creating SparkSession\nfrom pyspark.sql import SparkSession\nspark = SparkSession.builder.appName('explore_pyspark').getOrCreate()","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:10:10.274196Z","iopub.execute_input":"2024-02-14T23:10:10.275063Z","iopub.status.idle":"2024-02-14T23:10:17.196605Z","shell.execute_reply.started":"2024-02-14T23:10:10.275019Z","shell.execute_reply":"2024-02-14T23:10:17.19538Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stderr","text":"Setting default log level to \"WARN\".\nTo adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).\n24/02/14 23:10:14 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n","output_type":"stream"}]},{"cell_type":"code","source":"# Importing necessary packages\nfrom pyspark.sql.types import *\n#from pyspark.sql.functions import *\nimport pyspark.sql.functions as F","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:09:54.380465Z","iopub.execute_input":"2024-02-14T23:09:54.380865Z","iopub.status.idle":"2024-02-14T23:09:54.476867Z","shell.execute_reply.started":"2024-02-14T23:09:54.380829Z","shell.execute_reply":"2024-02-14T23:09:54.475588Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":"## Loading data","metadata":{}},{"cell_type":"code","source":"# Reading the kaggle dataset without inferschema\ndf = spark.read.csv('/kaggle/input/employees-performance-for-hr-analytics/Uncleaned_employees_final_dataset (1).csv',header=True)\ndf.printSchema()","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:10:25.799147Z","iopub.execute_input":"2024-02-14T23:10:25.799641Z","iopub.status.idle":"2024-02-14T23:10:32.968021Z","shell.execute_reply.started":"2024-02-14T23:10:25.799598Z","shell.execute_reply":"2024-02-14T23:10:32.967068Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"root\n |-- employee_id: string (nullable = true)\n |-- department: string (nullable = true)\n |-- region: string (nullable = true)\n |-- education: string (nullable = true)\n |-- gender: string (nullable = true)\n |-- recruitment_channel: string (nullable = true)\n |-- no_of_trainings: string (nullable = true)\n |-- age: string (nullable = true)\n |-- previous_year_rating: string (nullable = true)\n |-- length_of_service: string (nullable = true)\n |-- KPIs_met_more_than_80: string (nullable = true)\n |-- awards_won: string (nullable = true)\n |-- avg_training_score: string (nullable = true)\n\n","output_type":"stream"}]},{"cell_type":"code","source":"# Reading the kaggle dataset with inferschema and checking the data types\ndf = spark.read.csv('/kaggle/input/employees-performance-for-hr-analytics/Uncleaned_employees_final_dataset (1).csv',inferSchema= True,header=True)\n#inferSchema infers the datatype of field from its values. But it reads the entire data and may have performance issues while reading larger datasets.\n#The otherway is to predefine the schema using structType that saves time - Optimized approach\ndf.printSchema()","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:12:02.651618Z","iopub.execute_input":"2024-02-14T23:12:02.652137Z","iopub.status.idle":"2024-02-14T23:12:03.767445Z","shell.execute_reply.started":"2024-02-14T23:12:02.652089Z","shell.execute_reply":"2024-02-14T23:12:03.766343Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"root\n |-- employee_id: integer (nullable = true)\n |-- department: string (nullable = true)\n |-- region: string (nullable = true)\n |-- education: string (nullable = true)\n |-- gender: string (nullable = true)\n |-- recruitment_channel: string (nullable = true)\n |-- no_of_trainings: integer (nullable = true)\n |-- age: integer (nullable = true)\n |-- previous_year_rating: integer (nullable = true)\n |-- length_of_service: integer (nullable = true)\n |-- KPIs_met_more_than_80: integer (nullable = true)\n |-- awards_won: integer (nullable = true)\n |-- avg_training_score: integer (nullable = true)\n\n","output_type":"stream"},{"name":"stderr","text":"                                                                                \r","output_type":"stream"}]},{"cell_type":"code","source":"#Pre-defining the schmea\n# Note, all the fields available in the data need to be defined, the size of the structType and dataframe should match\n\nsch = StructType([\n    StructField(\"employee_id\",IntegerType(),True),\n    StructField(\"department\",StringType(),True),\n    StructField(\"region\",StringType(),True),\n    StructField(\"education\",StringType(),True),\n    StructField(\"gender\",StringType(),True),\n    StructField(\"recruitment_channel\",StringType(),True),\n    StructField(\"no_of_trainings\",IntegerType(),True),\n    StructField(\"age\",IntegerType(),True),\n    StructField(\"previous_year_rating\",IntegerType(),True),\n    StructField(\"length_of_service\",IntegerType(),True),\n    StructField(\"KPIs_met_more_than_80\",IntegerType(),True),\n    StructField(\"awards_won\",IntegerType(),True),\n    StructField(\"avg_training_score\",IntegerType(),True)\n])","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:12:12.524794Z","iopub.execute_input":"2024-02-14T23:12:12.525269Z","iopub.status.idle":"2024-02-14T23:12:12.534556Z","shell.execute_reply.started":"2024-02-14T23:12:12.525234Z","shell.execute_reply":"2024-02-14T23:12:12.533214Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"df3 = spark.read\\\n.option(\"header\",True) \\\n.schema(sch) \\\n.csv('/kaggle/input/employees-performance-for-hr-analytics/Uncleaned_employees_final_dataset (1).csv')\n\ndf3.printSchema()","metadata":{"execution":{"iopub.status.busy":"2024-02-15T00:45:28.084011Z","iopub.execute_input":"2024-02-15T00:45:28.085414Z","iopub.status.idle":"2024-02-15T00:45:28.143981Z","shell.execute_reply.started":"2024-02-15T00:45:28.08536Z","shell.execute_reply":"2024-02-15T00:45:28.142822Z"},"trusted":true},"execution_count":83,"outputs":[{"name":"stdout","text":"root\n |-- employee_id: integer (nullable = true)\n |-- department: string (nullable = true)\n |-- region: string (nullable = true)\n |-- education: string (nullable = true)\n |-- gender: string (nullable = true)\n |-- recruitment_channel: string (nullable = true)\n |-- no_of_trainings: integer (nullable = true)\n |-- age: integer (nullable = true)\n |-- previous_year_rating: integer (nullable = true)\n |-- length_of_service: integer (nullable = true)\n |-- KPIs_met_more_than_80: integer (nullable = true)\n |-- awards_won: integer (nullable = true)\n |-- avg_training_score: integer (nullable = true)\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## withColumn()","metadata":{}},{"cell_type":"markdown","source":"### .lit()","metadata":{}},{"cell_type":"code","source":"# Creating new column with constant value\ndf2 = df.withColumn(\"company\",F.lit('ABC'))\\\n        .withColumn(\"country\", F.lit('USA'))\ndf2.select('employee_id','company','country').show(2)","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:12:19.34557Z","iopub.execute_input":"2024-02-14T23:12:19.346017Z","iopub.status.idle":"2024-02-14T23:12:19.991587Z","shell.execute_reply.started":"2024-02-14T23:12:19.345984Z","shell.execute_reply":"2024-02-14T23:12:19.990247Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"+-----------+-------+-------+\n|employee_id|company|country|\n+-----------+-------+-------+\n|       8724|    ABC|    USA|\n|      74430|    ABC|    USA|\n+-----------+-------+-------+\nonly showing top 2 rows\n\n","output_type":"stream"}]},{"cell_type":"code","source":"# Changing column datatypes of selected fields using withColumn\n\ndf2 = df.withColumn(\"age\",df.age.cast(IntegerType())) \\\n.withColumn(\"length_of_service\",df.length_of_service.cast(IntegerType()))\ndf2.printSchema()","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:12:25.970689Z","iopub.execute_input":"2024-02-14T23:12:25.97169Z","iopub.status.idle":"2024-02-14T23:12:26.055805Z","shell.execute_reply.started":"2024-02-14T23:12:25.971653Z","shell.execute_reply":"2024-02-14T23:12:26.054897Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"root\n |-- employee_id: integer (nullable = true)\n |-- department: string (nullable = true)\n |-- region: string (nullable = true)\n |-- education: string (nullable = true)\n |-- gender: string (nullable = true)\n |-- recruitment_channel: string (nullable = true)\n |-- no_of_trainings: integer (nullable = true)\n |-- age: integer (nullable = true)\n |-- previous_year_rating: integer (nullable = true)\n |-- length_of_service: integer (nullable = true)\n |-- KPIs_met_more_than_80: integer (nullable = true)\n |-- awards_won: integer (nullable = true)\n |-- avg_training_score: integer (nullable = true)\n\n","output_type":"stream"}]},{"cell_type":"code","source":"# Rename column\ndf2 = df2.withColumnsRenamed({'country':'nation','company':'org'})\ndf2.printSchema()","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:12:28.3875Z","iopub.execute_input":"2024-02-14T23:12:28.387946Z","iopub.status.idle":"2024-02-14T23:12:28.412336Z","shell.execute_reply.started":"2024-02-14T23:12:28.387912Z","shell.execute_reply":"2024-02-14T23:12:28.411258Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"root\n |-- employee_id: integer (nullable = true)\n |-- department: string (nullable = true)\n |-- region: string (nullable = true)\n |-- education: string (nullable = true)\n |-- gender: string (nullable = true)\n |-- recruitment_channel: string (nullable = true)\n |-- no_of_trainings: integer (nullable = true)\n |-- age: integer (nullable = true)\n |-- previous_year_rating: integer (nullable = true)\n |-- length_of_service: integer (nullable = true)\n |-- KPIs_met_more_than_80: integer (nullable = true)\n |-- awards_won: integer (nullable = true)\n |-- avg_training_score: integer (nullable = true)\n\n","output_type":"stream"}]},{"cell_type":"code","source":"df2=df2.drop(\"org\",\"nation\")\ndf2.columns","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:12:32.459298Z","iopub.execute_input":"2024-02-14T23:12:32.459741Z","iopub.status.idle":"2024-02-14T23:12:32.488315Z","shell.execute_reply.started":"2024-02-14T23:12:32.459707Z","shell.execute_reply":"2024-02-14T23:12:32.487157Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"['employee_id',\n 'department',\n 'region',\n 'education',\n 'gender',\n 'recruitment_channel',\n 'no_of_trainings',\n 'age',\n 'previous_year_rating',\n 'length_of_service',\n 'KPIs_met_more_than_80',\n 'awards_won',\n 'avg_training_score']"},"metadata":{}}]},{"cell_type":"markdown","source":"## .select()","metadata":{}},{"cell_type":"code","source":"# selecting few fields using select\nx = df3.select('employee_id','age')\nprint(type(x))\nx.show(5)","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:12:36.609028Z","iopub.execute_input":"2024-02-14T23:12:36.60969Z","iopub.status.idle":"2024-02-14T23:12:36.892369Z","shell.execute_reply.started":"2024-02-14T23:12:36.609657Z","shell.execute_reply":"2024-02-14T23:12:36.891226Z"},"trusted":true},"execution_count":15,"outputs":[{"name":"stdout","text":"<class 'pyspark.sql.dataframe.DataFrame'>\n+-----------+---+\n|employee_id|age|\n+-----------+---+\n|       8724| 24|\n|      74430| 31|\n|      72255| 31|\n|      38562| 31|\n|      64486| 30|\n+-----------+---+\nonly showing top 5 rows\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## .filter()","metadata":{}},{"cell_type":"code","source":"#filter with one condition\ndf3.filter(df3.age > 20).select('employee_id','age').show(5)","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:12:39.728384Z","iopub.execute_input":"2024-02-14T23:12:39.729043Z","iopub.status.idle":"2024-02-14T23:12:40.029907Z","shell.execute_reply.started":"2024-02-14T23:12:39.72901Z","shell.execute_reply":"2024-02-14T23:12:40.028742Z"},"trusted":true},"execution_count":16,"outputs":[{"name":"stdout","text":"+-----------+---+\n|employee_id|age|\n+-----------+---+\n|       8724| 24|\n|      74430| 31|\n|      72255| 31|\n|      38562| 31|\n|      64486| 30|\n+-----------+---+\nonly showing top 5 rows\n\n","output_type":"stream"}]},{"cell_type":"code","source":"#Filter with multiple conditions\ndf3.filter( (df3.age >20) & (df3.department == \"HR\") ).select('employee_id',\n                                                              'department',\n                                                              'age').show(4)","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:12:42.96956Z","iopub.execute_input":"2024-02-14T23:12:42.970504Z","iopub.status.idle":"2024-02-14T23:12:43.485629Z","shell.execute_reply.started":"2024-02-14T23:12:42.970464Z","shell.execute_reply":"2024-02-14T23:12:43.48431Z"},"trusted":true},"execution_count":17,"outputs":[{"name":"stdout","text":"+-----------+----------+---+\n|employee_id|department|age|\n+-----------+----------+---+\n|      74430|        HR| 31|\n|      10761|        HR| 58|\n|      50038|        HR| 33|\n|      50380|        HR| 31|\n+-----------+----------+---+\nonly showing top 4 rows\n\n","output_type":"stream"}]},{"cell_type":"code","source":"# Finance and age>40 or HR \ndf4 = df3.filter( ( (df3.department == \"Finance\") & (df3.age>40) ) | (df3.department == \"HR\") )\\\n        .select('employee_id','department','age')","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:12:45.902958Z","iopub.execute_input":"2024-02-14T23:12:45.903423Z","iopub.status.idle":"2024-02-14T23:12:45.937877Z","shell.execute_reply.started":"2024-02-14T23:12:45.903391Z","shell.execute_reply":"2024-02-14T23:12:45.936701Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"df4.groupBy('department')\\\n.count()\\\n.show()","metadata":{"execution":{"iopub.status.busy":"2024-02-14T01:11:37.878934Z","iopub.execute_input":"2024-02-14T01:11:37.879331Z","iopub.status.idle":"2024-02-14T01:11:38.223104Z","shell.execute_reply.started":"2024-02-14T01:11:37.879303Z","shell.execute_reply":"2024-02-14T01:11:38.221997Z"},"trusted":true},"execution_count":68,"outputs":[{"name":"stdout","text":"+----------+-----+\n|department|count|\n+----------+-----+\n|        HR|  833|\n|   Finance|   78|\n+----------+-----+\n\n","output_type":"stream"}]},{"cell_type":"code","source":"df4.filter((df4.department==\"Finance\") & (df4.age<40)).show()","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:15:51.55688Z","iopub.execute_input":"2024-02-14T23:15:51.557424Z","iopub.status.idle":"2024-02-14T23:15:51.989666Z","shell.execute_reply.started":"2024-02-14T23:15:51.557374Z","shell.execute_reply":"2024-02-14T23:15:51.988461Z"},"trusted":true},"execution_count":19,"outputs":[{"name":"stdout","text":"+-----------+----------+---+\n|employee_id|department|age|\n+-----------+----------+---+\n+-----------+----------+---+\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"### Get unique values for categorical fields","metadata":{}},{"cell_type":"code","source":"df3.select('department')\\\n.distinct().show()","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:15:54.192177Z","iopub.execute_input":"2024-02-14T23:15:54.192948Z","iopub.status.idle":"2024-02-14T23:15:55.354641Z","shell.execute_reply.started":"2024-02-14T23:15:54.192905Z","shell.execute_reply":"2024-02-14T23:15:55.353668Z"},"trusted":true},"execution_count":20,"outputs":[{"name":"stdout","text":"+-----------------+\n|       department|\n+-----------------+\n|               HR|\n|          Finance|\n|        Analytics|\n|            Legal|\n|Sales & Marketing|\n|       Technology|\n|      Procurement|\n|       Operations|\n|              R&D|\n+-----------------+\n\n","output_type":"stream"}]},{"cell_type":"code","source":"# to get unique values as a list\ndf3.agg(F.collect_set(\"department\")).collect()[0][0]","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:15:57.752689Z","iopub.execute_input":"2024-02-14T23:15:57.753973Z","iopub.status.idle":"2024-02-14T23:15:58.355878Z","shell.execute_reply.started":"2024-02-14T23:15:57.753931Z","shell.execute_reply":"2024-02-14T23:15:58.354696Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"['Finance',\n 'Legal',\n 'Sales & Marketing',\n 'HR',\n 'Operations',\n 'R&D',\n 'Analytics',\n 'Technology',\n 'Procurement']"},"metadata":{}}]},{"cell_type":"code","source":"df3.agg(F.collect_set(\"recruitment_channel\")).collect()[0][0]","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:16:00.487881Z","iopub.execute_input":"2024-02-14T23:16:00.488293Z","iopub.status.idle":"2024-02-14T23:16:00.863529Z","shell.execute_reply.started":"2024-02-14T23:16:00.488263Z","shell.execute_reply":"2024-02-14T23:16:00.862232Z"},"trusted":true},"execution_count":22,"outputs":[{"execution_count":22,"output_type":"execute_result","data":{"text/plain":"['other', 'referred', 'sourcing']"},"metadata":{}}]},{"cell_type":"code","source":"dept =['R&D','Technology','Analytics']\ndf4=df3.filter(df3.department.isin(dept))\ndf4.select(df4.department).distinct().show()","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:16:03.652039Z","iopub.execute_input":"2024-02-14T23:16:03.65246Z","iopub.status.idle":"2024-02-14T23:16:04.23195Z","shell.execute_reply.started":"2024-02-14T23:16:03.65243Z","shell.execute_reply":"2024-02-14T23:16:04.23056Z"},"trusted":true},"execution_count":23,"outputs":[{"name":"stdout","text":"+----------+\n|department|\n+----------+\n| Analytics|\n|Technology|\n|       R&D|\n+----------+\n\n","output_type":"stream"}]},{"cell_type":"code","source":"df3.columns","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:16:06.087843Z","iopub.execute_input":"2024-02-14T23:16:06.088262Z","iopub.status.idle":"2024-02-14T23:16:06.096548Z","shell.execute_reply.started":"2024-02-14T23:16:06.088232Z","shell.execute_reply":"2024-02-14T23:16:06.095162Z"},"trusted":true},"execution_count":24,"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"['employee_id',\n 'department',\n 'region',\n 'education',\n 'gender',\n 'recruitment_channel',\n 'no_of_trainings',\n 'age',\n 'previous_year_rating',\n 'length_of_service',\n 'KPIs_met_more_than_80',\n 'awards_won',\n 'avg_training_score']"},"metadata":{}}]},{"cell_type":"markdown","source":"## Aggregate functions","metadata":{}},{"cell_type":"code","source":"df3.groupBy(['department'])\\\n   .agg(F.round(F.median('age'),2).alias('median_age'),\n       F.mean('avg_training_score').alias('avg_training_score'),\n        F.mode('length_of_service').alias('max_los')\n       ).show()","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:16:08.375692Z","iopub.execute_input":"2024-02-14T23:16:08.376095Z","iopub.status.idle":"2024-02-14T23:16:09.37319Z","shell.execute_reply.started":"2024-02-14T23:16:08.376063Z","shell.execute_reply":"2024-02-14T23:16:09.371826Z"},"trusted":true},"execution_count":25,"outputs":[{"name":"stderr","text":"[Stage 20:>                                                         (0 + 1) / 1]\r","output_type":"stream"},{"name":"stdout","text":"+-----------------+----------+------------------+-------+\n|       department|median_age|avg_training_score|max_los|\n+-----------------+----------+------------------+-------+\n|               HR|      32.0| 50.38775510204081|      2|\n|          Finance|      31.0| 60.32668329177057|      2|\n|        Analytics|      31.0| 84.56511490866235|      4|\n|            Legal|      32.0| 59.53313253012048|      2|\n|Sales & Marketing|      33.0| 50.05661414437523|      3|\n|       Technology|      33.0| 79.84765802637563|      4|\n|      Procurement|      34.5| 70.18035714285715|      4|\n|       Operations|      35.0|60.351589103291715|      4|\n|              R&D|      32.0| 84.45180722891567|      2|\n+-----------------+----------+------------------+-------+\n\n","output_type":"stream"},{"name":"stderr","text":"                                                                                \r","output_type":"stream"}]},{"cell_type":"code","source":"df3.groupBy(['recruitment_channel'])\\\n   .agg(F.median('age').alias('median_age'),\n       F.mean('no_of_trainings').alias('trainings_avg'))\\\n   .show()","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:16:16.941181Z","iopub.execute_input":"2024-02-14T23:16:16.941601Z","iopub.status.idle":"2024-02-14T23:16:17.476147Z","shell.execute_reply.started":"2024-02-14T23:16:16.941572Z","shell.execute_reply":"2024-02-14T23:16:17.474815Z"},"trusted":true},"execution_count":26,"outputs":[{"name":"stdout","text":"+-------------------+----------+------------------+\n|recruitment_channel|median_age|     trainings_avg|\n+-------------------+----------+------------------+\n|              other|      33.0|1.2548456568557071|\n|           sourcing|      33.0|1.2484691794802014|\n|           referred|      31.0|1.1766561514195584|\n+-------------------+----------+------------------+\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## .explode()","metadata":{}},{"cell_type":"code","source":"#Let's create a new column-languages known for each employee\n# For simplicity, creating same values for all employees\n\ndf3=df3.withColumn('languages',F.lit(['SQL','Python']))\ndf3.select('employee_id','languages').show(5)","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:16:20.99101Z","iopub.execute_input":"2024-02-14T23:16:20.991468Z","iopub.status.idle":"2024-02-14T23:16:21.160724Z","shell.execute_reply.started":"2024-02-14T23:16:20.991435Z","shell.execute_reply":"2024-02-14T23:16:21.15947Z"},"trusted":true},"execution_count":27,"outputs":[{"name":"stdout","text":"+-----------+-------------+\n|employee_id|    languages|\n+-----------+-------------+\n|       8724|[SQL, Python]|\n|      74430|[SQL, Python]|\n|      72255|[SQL, Python]|\n|      38562|[SQL, Python]|\n|      64486|[SQL, Python]|\n+-----------+-------------+\nonly showing top 5 rows\n\n","output_type":"stream"}]},{"cell_type":"code","source":"df_lang = df3.select(df3.employee_id,F.explode(df3.languages))\ndf_lang.show(5)","metadata":{"execution":{"iopub.status.busy":"2024-02-14T23:16:51.32944Z","iopub.execute_input":"2024-02-14T23:16:51.33026Z","iopub.status.idle":"2024-02-14T23:16:51.52139Z","shell.execute_reply.started":"2024-02-14T23:16:51.330223Z","shell.execute_reply":"2024-02-14T23:16:51.520174Z"},"trusted":true},"execution_count":29,"outputs":[{"name":"stdout","text":"+-----------+------+\n|employee_id|   col|\n+-----------+------+\n|       8724|   SQL|\n|       8724|Python|\n|      74430|   SQL|\n|      74430|Python|\n|      72255|   SQL|\n+-----------+------+\nonly showing top 5 rows\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"##### explode can also be used to breakdown a column in dictionary format similar to list. This creates two new columns - key and value","metadata":{}},{"cell_type":"markdown","source":"## udf function\n\n##### UDF is User Defined Function that can be used to modify columns or fields","metadata":{}},{"cell_type":"code","source":"#udf on one column\n\n# Define function\ndef cap_gender(g):\n    return g.upper()\n\n# udf creation\ngen_udf = F.udf(cap_gender,StringType())\n\n# Apply udf\ndf_gen = df3.withColumn('gender_upd',gen_udf(df3.gender))","metadata":{"execution":{"iopub.status.busy":"2024-02-15T00:46:04.066719Z","iopub.execute_input":"2024-02-15T00:46:04.067117Z","iopub.status.idle":"2024-02-15T00:46:04.101592Z","shell.execute_reply.started":"2024-02-15T00:46:04.067088Z","shell.execute_reply":"2024-02-15T00:46:04.100223Z"},"trusted":true},"execution_count":86,"outputs":[]},{"cell_type":"code","source":"df_gen.select('gender','gender_upd').show(3)","metadata":{"execution":{"iopub.status.busy":"2024-02-15T00:46:17.422825Z","iopub.execute_input":"2024-02-15T00:46:17.423323Z","iopub.status.idle":"2024-02-15T00:46:17.829643Z","shell.execute_reply.started":"2024-02-15T00:46:17.423288Z","shell.execute_reply":"2024-02-15T00:46:17.828446Z"},"trusted":true},"execution_count":89,"outputs":[{"name":"stdout","text":"+------+----------+\n|gender|gender_upd|\n+------+----------+\n|     m|         M|\n|     f|         F|\n|     m|         M|\n+------+----------+\nonly showing top 3 rows\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"##### UDF with multiple returntypes","metadata":{}},{"cell_type":"code","source":"def modify_dataframe(department,recruitment_channel):\n    mod_dept = department.upper()\n    mod_rec_channel = recruitment_channel.title()\n    return mod_dept,mod_rec_channel","metadata":{"execution":{"iopub.status.busy":"2024-02-15T00:30:49.434234Z","iopub.execute_input":"2024-02-15T00:30:49.434767Z","iopub.status.idle":"2024-02-15T00:30:49.441838Z","shell.execute_reply.started":"2024-02-15T00:30:49.434728Z","shell.execute_reply":"2024-02-15T00:30:49.440229Z"},"trusted":true},"execution_count":64,"outputs":[]},{"cell_type":"code","source":"#Register UDF\ndf_udf = F.udf(modify_dataframe,StructType([StructField('mod_dept',StringType()),\n                                           StructField('mode_rec_channel',StringType())]))","metadata":{"execution":{"iopub.status.busy":"2024-02-15T00:30:51.28924Z","iopub.execute_input":"2024-02-15T00:30:51.289723Z","iopub.status.idle":"2024-02-15T00:30:51.296733Z","shell.execute_reply.started":"2024-02-15T00:30:51.289685Z","shell.execute_reply":"2024-02-15T00:30:51.295413Z"},"trusted":true},"execution_count":65,"outputs":[]},{"cell_type":"code","source":"#Apply udf to dataframe\ndf4 = df3.withColumn('mod_columns',df_udf(df3['department'],df3['recruitment_channel']))","metadata":{"execution":{"iopub.status.busy":"2024-02-15T00:30:53.738327Z","iopub.execute_input":"2024-02-15T00:30:53.73877Z","iopub.status.idle":"2024-02-15T00:30:53.778264Z","shell.execute_reply.started":"2024-02-15T00:30:53.738724Z","shell.execute_reply":"2024-02-15T00:30:53.776735Z"},"trusted":true},"execution_count":66,"outputs":[]},{"cell_type":"code","source":"df4.select('mod_columns').show(4)","metadata":{"execution":{"iopub.status.busy":"2024-02-15T00:52:06.074728Z","iopub.execute_input":"2024-02-15T00:52:06.07553Z","iopub.status.idle":"2024-02-15T00:52:06.517054Z","shell.execute_reply.started":"2024-02-15T00:52:06.075485Z","shell.execute_reply":"2024-02-15T00:52:06.515674Z"},"trusted":true},"execution_count":93,"outputs":[{"name":"stdout","text":"+--------------------+\n|         mod_columns|\n+--------------------+\n|{TECHNOLOGY, Sour...|\n|         {HR, Other}|\n|{SALES & MARKETIN...|\n|{PROCUREMENT, Other}|\n+--------------------+\nonly showing top 4 rows\n\n","output_type":"stream"}]},{"cell_type":"code","source":"#Split the udf updated columns\ndf5=df4.select('mod_columns.*').drop('mod_columns')\ndf5.show(4)","metadata":{"execution":{"iopub.status.busy":"2024-02-15T00:47:11.95979Z","iopub.execute_input":"2024-02-15T00:47:11.960257Z","iopub.status.idle":"2024-02-15T00:47:12.384817Z","shell.execute_reply.started":"2024-02-15T00:47:11.960222Z","shell.execute_reply":"2024-02-15T00:47:12.383392Z"},"trusted":true},"execution_count":92,"outputs":[{"name":"stdout","text":"+-----------------+----------------+\n|         mod_dept|mode_rec_channel|\n+-----------------+----------------+\n|       TECHNOLOGY|        Sourcing|\n|               HR|           Other|\n|SALES & MARKETING|           Other|\n|      PROCUREMENT|           Other|\n+-----------------+----------------+\nonly showing top 4 rows\n\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}